name: Test and Push Docker image

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - .github/**
      - '.gitignore'
      - 'README.md'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - .github/**
      - '.gitignore'
      - 'README.md'
  workflow_dispatch:
    inputs:
      image-test:
        type: boolean
        description: Run docker image tests
        required: false
      push:
        type: boolean
        description: Build and push image
        required: false
      image-tag:
        description: 'Custom commit hash to deploy'
        required: false
        default: ''

jobs:
  docker-test:
    name: 'Test docker image'
    if: github.event.inputs.image-test == 'True' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build image
        run: docker build -t image-test .

      - name: Install docker vulnerability scanner
        run: sudo apt-get install docker-scan-plugin

      - name: Run docker vulnerability scanner
        run: docker scan image-test

      - name: Run azure vulnerability scanner
        uses: azure/container-scan@v0
        with:
          image-name: image-test

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'image-test'
          format: 'table'
          # exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # - name: Login to DockerHub
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}